========
Overview
========

Nobby converts LaTeX documents into an HTML file + SVG images.

Its strategy, in a nutshell, is to divvy up the LaTeX document into
two types of fragments: text- and non-text (eg. equations, figures,
macros, etc) fragments. Nobby then compiles the non-text fragments
to SVG images and stitches them together with the text fragments to
create the HTML file.

This strategy is not new. The `Preview LaTeX
<http://www.gnu.org/software/auctex/preview-latex.html>`_
package for Emacs and `Quick LaTeX <http://www.quicklatex.com/>`_, an
online converter, pursue similar strategies. Where Nobby differs from
these tools is that it creates explicit HTML and SVG files that can be
directly viewed in the browser (launch Nobby with the ``--wb`` option
to save you the effort).


Who is it for
=============

`Nobby` is for people who want to write their web articles in LaTeX.

`Nobby2WP` is a separate program to publish these articles on a
Wordpress server.

Nobby is *not* for people who want to convert their PhD thesis to HTML
and expect it to "just work" (but feel free to try).

Rules of thumb for a successful conversion:

* Only use ``\documentclass{article}``.
* Refrain from (re)defining macros and LaTeX variables in the document
  body (preamble is fine).
* Abstain from layout altering packages.
* Use the `demo/demo.tex` file as a template for your articles.
* Use common sense.

Any LaTeX code that `pdflatex` can compile is admissible, including
equations and figures. Floating environments will not float
and appear where they are defined.


Gotchas
=======

As mentioned already, Nobby compiles every LaTeX macro and environment
into individual SVG images. The LaTeX fragments that make up the image
are self contained LaTeX documents and unaware of the other fragments.
The limitation of this approach should be mostly self evident, but
some of those are worth pointing out explicitly:

* Use ``\textbackslash{foo}`` instead of ``\textbackslash foo`` to
  avoid whitespace between the backslash and the next characters.
* Avoid `modal commands
  <http://www.tex.ac.uk/cgi-bin/texfaq2html?label=2letterfontcmd>`_ 
* ``\input`` will convert the included code into an image.
* Do not specify a font size in the ``documentclass`` (for font sizes
  other than 10pt this sometimes causes problems for unknown reasons).
* Avoid ``\verb``! Use ``\texttt{}`` if you merely want the typewriter
  font. See `here  
  <http://tex.stackexchange.com/questions/2790/when-should-one-use-verb-and-when-texttt>`_
  for a discussion on the use of ``\verb``.

Other notably unsupported features are:

* Bibliography
* Footnotes
* Fancy page styles
* Commands that make no sense in HTML (eg. \parskip, \newpage, etc.)


Labels, Cross References, and Counters
======================================

Nobby *attempts* to convert ``\label`` macros to HTML anchors. If the
label appears inside a fragment the corresponding HTML anchor wraps
the entire SVG image.

Nobby also tracks the LaTeX counters specified in
:const:`config.counter_names` at the start of all environment specified in
:const:`config.counter_dump_envs`. It does this with a "salted" version
of the original LaTeX file that utilises the `file` package to
write all counter values into a ".nobby" file. Nobby will then parse
this file and accordingly initialise the counter values in every
fragment preamble.

The benefit of this procedure is that equations, tables, etc. are
continuously enumerated in the HTML file. Furthermore, the plugin for
``\ref`` will parse the ".aux" file generated by LaTeX to determine
the exact name/number of the label, just as it would appear in the
final LaTeX output.

.. warning::
   You must add all environments which manipulate counters to the
   `config.counter_dump_envs` list to ensure the enumeration
   works as expected. You must also add all new counters to
   `config.counter_names`, either because you defined them
   explicitly, or implicitly with eg. a ``\newtheorem`` command.


Plugins
=======

Nobby does not interpret LaTeX code save for a few exceptions like
``\label`` and ``\\``. It has thus no concept of what eg. ``\ldots``
means. Instead it will create a LaTeX fragment that contains only the
``\ldots`` macro (plus preamble), compile it to PDF with `pdflatex`,
convert the result to SVG, and include that image in the HTML file.

This strategy makes sense for some macros/environments like
'equation', but not so much for others like ``\ldots``, which merely
produces three dots. To compound this problem Nobby supports
:ref:`plugins` to customise the HTML conversion of any macro or
environment. Nobby already includes plugins for environments like
``itemize`` and ``enumerate``, as well as macros like ``\ldots`` and
``\section``, ``\texttt``, ``\textbf``.
